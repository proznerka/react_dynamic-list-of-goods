{"version":3,"sources":["components/GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","shownGoods","className","map","good","style","color","name","id","getAllGoods","fetch","then","response","json","App","useState","showGoods","setShowGoods","showAllGoods","useCallback","goods","show5First","sort","a","b","localeCompare","slice","showRedGoods","filter","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iNAMaA,EAA6BC,IAAMC,MAAK,YAAqB,IAAlBC,EAAiB,EAAjBA,WACtD,OACE,oBAAIC,UAAU,QAAd,SACGD,EAAWE,KAAI,SAACC,GAAD,OACd,oBACEC,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAKE,QAD1B,SAIGF,EAAKG,MAFDH,EAAKI,YCTb,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICFMC,EAAgB,WAC3B,MAAkCC,mBAAiB,IAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAeC,uBAAY,WAC/BV,IACGE,MAAK,SAAAS,GACJH,EAAaG,QAEhB,IAEGC,EAAaF,uBAAY,WDP/BV,IACGE,MAAK,SAAAP,GAAI,OAAIA,EACXkB,MAAK,SAACC,EAASC,GAAV,OAAsBD,EAAEhB,KAAKkB,cAAcD,EAAEjB,SAClDmB,MAAM,EAAG,MCMTf,MAAK,SAAAS,GACJH,EAAaG,QAEhB,IAEGO,EAAeR,uBAAY,WDPjCV,IACGE,MAAK,SAAAS,GAAK,OAAIA,EACZQ,QAAO,SAACxB,GAAD,MAA+B,QAAfA,EAAKE,YCO5BK,MAAK,SAACS,GACLH,EAAaG,QAEhB,IAEH,OACE,gCACE,uDAEA,wBACES,KAAK,SACLC,QAASZ,EAFX,iBAOA,wBACEW,KAAK,SACLC,QAAST,EAFX,eAOA,wBACEQ,KAAK,SACLC,QAASH,EAFX,iBAOA,cAAC7B,EAAD,CAAWG,WAAYe,QCpD7Be,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.287eb202.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  shownGoods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ shownGoods }) => {\n  return (\n    <ul className=\"goods\">\n      {shownGoods.map((good) => (\n        <li\n          style={{ color: `${good.color}` }}\n          key={good.id}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n});\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAllGoods(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => (\n  getAllGoods()\n    .then(good => good\n      .sort((a: Good, b: Good) => a.name.localeCompare(b.name))\n      .slice(0, 5))\n);\n\nexport const getRedGoods = () => (\n  getAllGoods()\n    .then(goods => goods\n      .filter((good: Good) => good.color === 'red'))\n);\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nimport { getAllGoods, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [showGoods, setShowGoods] = useState<Good[]>([]);\n\n  const showAllGoods = useCallback(() => {\n    getAllGoods()\n      .then(goods => {\n        setShowGoods(goods);\n      });\n  }, []);\n\n  const show5First = useCallback(() => {\n    get5First()\n      .then(goods => {\n        setShowGoods(goods);\n      });\n  }, []);\n\n  const showRedGoods = useCallback(() => {\n    getRedGoods()\n      .then((goods: Good[]) => {\n        setShowGoods(goods);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        onClick={showAllGoods}\n      >\n        all\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={show5First}\n      >\n        5\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={showRedGoods}\n      >\n        red\n      </button>\n\n      <GoodsList shownGoods={showGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}